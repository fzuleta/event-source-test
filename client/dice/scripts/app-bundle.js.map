{"version":3,"sources":["src/app.ts","src/environment.ts","src/main.ts","src/connection/apigateway.ts","src/resources/index.ts","src/common/functions.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {inject} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {apigateway} from './connection/apigateway';\nimport {trace} from './common/functions';\n\n@inject(EventAggregator, apigateway)\nexport class App {\n    betAmount:String;\n    winResult:String = \"\";\n    connectionMessage:String=\"Connecting to server\";\n    connecting:boolean = false;\n    connectionSucceded:boolean = false;\n    apigateway:apigateway;\n    eventAggregator:EventAggregator;\n    user={};\n    balance={};\n\n    constructor(EventAggregator, apigateway){\n        this.betAmount = \"1000\";\n        this.connecting = false;\n        this.apigateway = apigateway;\n        this.eventAggregator = EventAggregator;\n    }\n    activate(){\n        return new Promise((resolve,reject)=>{ \n            this.apigateway.doApiCall({}, \"/getuser/\")\n            .then(o=>{\n                this.connectionSucceded = true;\n                this.user = o[\"data\"];\n                this.balance = o[\"data\"].balance;\n                resolve();\n            })\n            .catch(o=>{\n                this.connectionSucceded = false;\n                this.connectionMessage = \"Can't connect to server, is it running?\";\n                resolve(o);\n            });\n        });\n    }\n\n    play(){\n        this.connecting = true;\n        this.winResult = \"\";\n        const data = {\n            userId: this.user[\"id\"],\n            betAmount: this.betAmount\n        };\n        this.apigateway.doApiCall(data, \"/play/\").then(o=>{\n            this.connecting = false;\n            if (o[\"success\"]) {\n                const data = o[\"data\"];\n                this.balance[\"gold\"] = data.balance;\n                if (data.winAmount){\n                    this.winResult = \"Win! $\" + data.winAmount;\n                } else {\n                    this.winResult = \"No Win\";\n                }\n            } else {\n                this.winResult = \"Error\";\n            }\n        })\n    }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\nexport function configure(aurelia: Aurelia) {\n  const thedomain = location.hostname;\n  aurelia.use.instance(\"apiRoot\", `http://${thedomain}:8090`);\n\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import { inject } from 'aurelia-framework';\nimport {HttpClient as httpFetch, json} from 'aurelia-fetch-client';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {trace} from './../common/functions';\n\n@inject('apiRoot', EventAggregator,httpFetch)\nexport class apigateway {\n    apiRoot:string;\n    eventAggregator;\n    httpFetch;\n\n\n    constructor(apiRoot,EventAggregator,httpFetch){\n        this.apiRoot = apiRoot;\n        this.eventAggregator = EventAggregator; \n\n        httpFetch.configure(config => {\n            config\n                .withDefaults({\n                    credentials: 'include', // Valid values; omit, same-origin and include\n                    headers: {\n                        'Accept': 'application/json',\n                        'X-Requested-With': 'Fetch'\n                    }\n                })\n                .withInterceptor({\n                    request(request) {\n                        trace(`Requesting ${request.method} ${request.url}`); \n                        return request; \n                    },\n                    // response(response) {\n                    //     console.log(`Received ${response.status} ${response.url}`);\n                    //     return response; // you can return a modified Response\n                    // }\n                });\n        });\n        this.httpFetch = httpFetch;\n\n    }\n\n    doApiCall(myPostData={}, endPoint=\"\", isFormData=false) {\n        let body = null;\n        myPostData = Object.assign({}, myPostData);\n        if (!isFormData) { body = JSON.stringify(myPostData) } else { body = myPostData; }\n\n        return new Promise( (resolve, reject) => { \n            this.httpFetch.fetch(this.apiRoot + endPoint, {\n                method: \"POST\",\n                body: body\n            })\n            .then(response => response.json())\n            .then(  o => resolve(o))\n            .catch( o => reject(o)); \n        });\n    }\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n","export function trace(o) {\n    if (typeof console === \"undefined\") {\n        //console not available\n    } else {\n        if (typeof o === \"string\") {\n            console.log(\"%c\"+o, 'background: #f8eafc; color: #302207');\n        } else {\n            console.log(o);\n        }\n    }\n}"],"sourceRoot":".."}